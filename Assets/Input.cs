//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Input: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3466f791-9372-4a9e-9649-a89722f0dc7c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""2d39eda8-18aa-4335-994b-da72b8529fef"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8d84669c-5845-47d8-a1d7-6c9dd247d8af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeAllStack"",
                    ""type"": ""Button"",
                    ""id"": ""30f305f6-b553-4688-b98b-fb138fb49747"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""5f24e5cf-aa2c-47ac-b770-9b5f85b980e2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NodsPanelOpen"",
                    ""type"": ""Button"",
                    ""id"": ""6ffdc755-d568-4752-a37f-bb3c55750c73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""600698db-ec2c-4ac8-8056-f885281da471"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseLeftButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""01157e50-b92a-42c1-be26-beea58f0c6fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowInventory"",
                    ""type"": ""Button"",
                    ""id"": ""d53f4017-3116-4f93-8d0e-49e3a7a1d9cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gadjet1"",
                    ""type"": ""Button"",
                    ""id"": ""83d17d6d-cb3d-43d6-b807-ba6f7c14cd91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gadjet2"",
                    ""type"": ""Button"",
                    ""id"": ""960afedc-18b0-4ab0-a620-b10d5fe7ca03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gadjet3"",
                    ""type"": ""Button"",
                    ""id"": ""98146d60-6331-47ec-8224-2f553ac61b36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gadjet4"",
                    ""type"": ""Button"",
                    ""id"": ""5428ce02-eecf-449f-9fbd-f8e31f665675"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseRightButtonClick"",
                    ""type"": ""Button"",
                    ""id"": ""3ebbe8aa-65f9-421e-ba4d-94ccab277e48"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Iteract"",
                    ""type"": ""Button"",
                    ""id"": ""e05a8fbd-2ce1-40f2-8f63-becdc5220449"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a672785d-d29d-4c66-a35d-0cfe8d1ce1f1"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""42f70b4c-3055-46df-be5a-53f6fb2ccf71"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""167836db-5d1a-45ce-bb6a-07e3c86b3ffc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7f5b02b7-9bf7-4401-bb77-eb495d796f88"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0457a8f-86ec-49e0-acca-bb4881f98d9d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""TakeAllStack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b094760c-c884-48df-aac3-846495ad6351"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc086750-9c31-4645-846c-4489af680f12"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NodsPanelOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e41e5cfa-d5f1-4a65-89b1-e0e84af11f9b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7189186f-91b9-4fde-8be9-ee5023617f6e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MouseLeftButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5014c3fc-7578-457f-a121-968c4ee46d22"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ShowInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5b46bdf-707b-4f7b-9d91-a03ee32b7788"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Gadjet1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0286670-109e-4740-b696-260f25d162c9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Gadjet2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""968fb4c9-2211-4ee2-a65f-bbc625cc02bc"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Gadjet3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a8fbe94-c970-4824-9116-4720dee692e2"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Gadjet4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b67eda3-a868-42c8-b92b-256463fd67f6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MouseRightButtonClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b12d0b9-c7f8-47ad-87fd-0d6e1ce9122a"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Iteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0acbee68-5fa1-46d6-8930-525e214db96a"",
                    ""path"": ""<Keyboard>/#(У)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Iteract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""d064dc28-edc2-4c37-a80d-0d5c53f32c25"",
            ""actions"": [
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""ab4a1ef8-c598-4f4e-9ed0-b70fc4fcd9cd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""e97cf26a-5a14-4d49-98f5-4702f5e240e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""14f30caf-01ae-4bbc-bda8-94ed2e4e7481"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d57ac04-476c-4ee4-aeb0-631ab0142770"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": []
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_TakeAllStack = m_Player.FindAction("TakeAllStack", throwIfNotFound: true);
        m_Player_MousePosition = m_Player.FindAction("MousePosition", throwIfNotFound: true);
        m_Player_NodsPanelOpen = m_Player.FindAction("NodsPanelOpen", throwIfNotFound: true);
        m_Player_Close = m_Player.FindAction("Close", throwIfNotFound: true);
        m_Player_MouseLeftButtonClick = m_Player.FindAction("MouseLeftButtonClick", throwIfNotFound: true);
        m_Player_ShowInventory = m_Player.FindAction("ShowInventory", throwIfNotFound: true);
        m_Player_Gadjet1 = m_Player.FindAction("Gadjet1", throwIfNotFound: true);
        m_Player_Gadjet2 = m_Player.FindAction("Gadjet2", throwIfNotFound: true);
        m_Player_Gadjet3 = m_Player.FindAction("Gadjet3", throwIfNotFound: true);
        m_Player_Gadjet4 = m_Player.FindAction("Gadjet4", throwIfNotFound: true);
        m_Player_MouseRightButtonClick = m_Player.FindAction("MouseRightButtonClick", throwIfNotFound: true);
        m_Player_Iteract = m_Player.FindAction("Iteract", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_MousePosition = m_UI.FindAction("MousePosition", throwIfNotFound: true);
        m_UI_Escape = m_UI.FindAction("Escape", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_TakeAllStack;
    private readonly InputAction m_Player_MousePosition;
    private readonly InputAction m_Player_NodsPanelOpen;
    private readonly InputAction m_Player_Close;
    private readonly InputAction m_Player_MouseLeftButtonClick;
    private readonly InputAction m_Player_ShowInventory;
    private readonly InputAction m_Player_Gadjet1;
    private readonly InputAction m_Player_Gadjet2;
    private readonly InputAction m_Player_Gadjet3;
    private readonly InputAction m_Player_Gadjet4;
    private readonly InputAction m_Player_MouseRightButtonClick;
    private readonly InputAction m_Player_Iteract;
    public struct PlayerActions
    {
        private @Input m_Wrapper;
        public PlayerActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @TakeAllStack => m_Wrapper.m_Player_TakeAllStack;
        public InputAction @MousePosition => m_Wrapper.m_Player_MousePosition;
        public InputAction @NodsPanelOpen => m_Wrapper.m_Player_NodsPanelOpen;
        public InputAction @Close => m_Wrapper.m_Player_Close;
        public InputAction @MouseLeftButtonClick => m_Wrapper.m_Player_MouseLeftButtonClick;
        public InputAction @ShowInventory => m_Wrapper.m_Player_ShowInventory;
        public InputAction @Gadjet1 => m_Wrapper.m_Player_Gadjet1;
        public InputAction @Gadjet2 => m_Wrapper.m_Player_Gadjet2;
        public InputAction @Gadjet3 => m_Wrapper.m_Player_Gadjet3;
        public InputAction @Gadjet4 => m_Wrapper.m_Player_Gadjet4;
        public InputAction @MouseRightButtonClick => m_Wrapper.m_Player_MouseRightButtonClick;
        public InputAction @Iteract => m_Wrapper.m_Player_Iteract;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @TakeAllStack.started += instance.OnTakeAllStack;
            @TakeAllStack.performed += instance.OnTakeAllStack;
            @TakeAllStack.canceled += instance.OnTakeAllStack;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @NodsPanelOpen.started += instance.OnNodsPanelOpen;
            @NodsPanelOpen.performed += instance.OnNodsPanelOpen;
            @NodsPanelOpen.canceled += instance.OnNodsPanelOpen;
            @Close.started += instance.OnClose;
            @Close.performed += instance.OnClose;
            @Close.canceled += instance.OnClose;
            @MouseLeftButtonClick.started += instance.OnMouseLeftButtonClick;
            @MouseLeftButtonClick.performed += instance.OnMouseLeftButtonClick;
            @MouseLeftButtonClick.canceled += instance.OnMouseLeftButtonClick;
            @ShowInventory.started += instance.OnShowInventory;
            @ShowInventory.performed += instance.OnShowInventory;
            @ShowInventory.canceled += instance.OnShowInventory;
            @Gadjet1.started += instance.OnGadjet1;
            @Gadjet1.performed += instance.OnGadjet1;
            @Gadjet1.canceled += instance.OnGadjet1;
            @Gadjet2.started += instance.OnGadjet2;
            @Gadjet2.performed += instance.OnGadjet2;
            @Gadjet2.canceled += instance.OnGadjet2;
            @Gadjet3.started += instance.OnGadjet3;
            @Gadjet3.performed += instance.OnGadjet3;
            @Gadjet3.canceled += instance.OnGadjet3;
            @Gadjet4.started += instance.OnGadjet4;
            @Gadjet4.performed += instance.OnGadjet4;
            @Gadjet4.canceled += instance.OnGadjet4;
            @MouseRightButtonClick.started += instance.OnMouseRightButtonClick;
            @MouseRightButtonClick.performed += instance.OnMouseRightButtonClick;
            @MouseRightButtonClick.canceled += instance.OnMouseRightButtonClick;
            @Iteract.started += instance.OnIteract;
            @Iteract.performed += instance.OnIteract;
            @Iteract.canceled += instance.OnIteract;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @TakeAllStack.started -= instance.OnTakeAllStack;
            @TakeAllStack.performed -= instance.OnTakeAllStack;
            @TakeAllStack.canceled -= instance.OnTakeAllStack;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @NodsPanelOpen.started -= instance.OnNodsPanelOpen;
            @NodsPanelOpen.performed -= instance.OnNodsPanelOpen;
            @NodsPanelOpen.canceled -= instance.OnNodsPanelOpen;
            @Close.started -= instance.OnClose;
            @Close.performed -= instance.OnClose;
            @Close.canceled -= instance.OnClose;
            @MouseLeftButtonClick.started -= instance.OnMouseLeftButtonClick;
            @MouseLeftButtonClick.performed -= instance.OnMouseLeftButtonClick;
            @MouseLeftButtonClick.canceled -= instance.OnMouseLeftButtonClick;
            @ShowInventory.started -= instance.OnShowInventory;
            @ShowInventory.performed -= instance.OnShowInventory;
            @ShowInventory.canceled -= instance.OnShowInventory;
            @Gadjet1.started -= instance.OnGadjet1;
            @Gadjet1.performed -= instance.OnGadjet1;
            @Gadjet1.canceled -= instance.OnGadjet1;
            @Gadjet2.started -= instance.OnGadjet2;
            @Gadjet2.performed -= instance.OnGadjet2;
            @Gadjet2.canceled -= instance.OnGadjet2;
            @Gadjet3.started -= instance.OnGadjet3;
            @Gadjet3.performed -= instance.OnGadjet3;
            @Gadjet3.canceled -= instance.OnGadjet3;
            @Gadjet4.started -= instance.OnGadjet4;
            @Gadjet4.performed -= instance.OnGadjet4;
            @Gadjet4.canceled -= instance.OnGadjet4;
            @MouseRightButtonClick.started -= instance.OnMouseRightButtonClick;
            @MouseRightButtonClick.performed -= instance.OnMouseRightButtonClick;
            @MouseRightButtonClick.canceled -= instance.OnMouseRightButtonClick;
            @Iteract.started -= instance.OnIteract;
            @Iteract.performed -= instance.OnIteract;
            @Iteract.canceled -= instance.OnIteract;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_MousePosition;
    private readonly InputAction m_UI_Escape;
    public struct UIActions
    {
        private @Input m_Wrapper;
        public UIActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePosition => m_Wrapper.m_UI_MousePosition;
        public InputAction @Escape => m_Wrapper.m_UI_Escape;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnTakeAllStack(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnNodsPanelOpen(InputAction.CallbackContext context);
        void OnClose(InputAction.CallbackContext context);
        void OnMouseLeftButtonClick(InputAction.CallbackContext context);
        void OnShowInventory(InputAction.CallbackContext context);
        void OnGadjet1(InputAction.CallbackContext context);
        void OnGadjet2(InputAction.CallbackContext context);
        void OnGadjet3(InputAction.CallbackContext context);
        void OnGadjet4(InputAction.CallbackContext context);
        void OnMouseRightButtonClick(InputAction.CallbackContext context);
        void OnIteract(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnMousePosition(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
    }
}
